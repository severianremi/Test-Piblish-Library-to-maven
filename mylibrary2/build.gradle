apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

apply plugin: 'com.github.dcendents.android-maven'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.0"


    defaultConfig {
        minSdkVersion 18
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "version"
    productFlavors {
        pro {}
        free {}
    }

}

task sourcesJar(type: Jar) {
    archiveClassifier = 'sources'
    from android.sourceSets.main.javaDirectories
}

artifacts {
    archives sourcesJar
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    api project(':lib')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.core:core-ktx:1.0.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
}

group = 'com.github.severianremi'
version = "1.1.1"

if (android.productFlavors.size() > 0) {
    android.libraryVariants.all { variant ->

        if (variant.name.toLowerCase().contains("debug")) {
            return
        }

        def bundleTask = tasks["bundle${variant.name.capitalize()}Aar"]

        artifacts {
            archives(bundleTask.archivePath) {
                classifier variant.flavorName
                builtBy bundleTask
                name = project.name
            }
        }

        def flavorName = variant.flavorName.toLowerCase()
        def flavorSourcesTask = tasks.create(name : "${flavorName}SourcesJar", type: Jar) {
            classifier = "${flavorName}-sources"
            from android.sourceSets.main.javaDirectories
            from android.sourceSets[flavorName].javaDirectories
        }

        artifacts {
            archives flavorSourcesTask
        }

    }
}


